function [data,data_struct] = synthetic_data_simu3(P,varargin)
    vars=["T","D","seed","sigma2"];
    values=[5000,20,200,0.5];
    p=inputParser;
    for i=1:length(vars)
        addParameter(p,vars(i),values(i));
    end
    parse(p,varargin{:});
    seed=p.Results.seed;
    rng(seed)
    sigma2=p.Results.sigma2;
    D=p.Results.D;
    T=p.Results.T;
    Walk=[];
    dumatrix=zeros(5,D);
    for i=1:5
        A=rand(1,D);
        dumatrix(i,:)=A./sum(A);
    end
    TT=0;
    k=1;
    while TT<=T
        if k==1
            rand_N=randi(5);
            rand_d=rand();
            d=find((cumsum(dumatrix(rand_N,:))-rand_d)>=0);
            d=d(1,1);
            Walk=[Walk;kron(rand_N,ones(d,1))];
            TT=TT+d;
            k=k+1;
        else
            old_N=Walk(end,1);
            runi=rand();
            a=find((cumsum(P(old_N,:))-runi)>=0);
            new_N=a(1,1);
            rand_d=rand();
            d=find((cumsum(dumatrix(new_N,:))-rand_d)>=0);
            d=d(1,1);
            Walk=[Walk;kron(new_N,ones(d,1))];
            TT=TT+d;
        end
    end
    state_seqs=Walk(1:T,1);
    for i=1:5
        state_gamma(i,1)=sum(state_seqs==i)/T;
    end
    AR_cellT{1,1}=[[0.45,0,0,0,0;
            0,0,0,0,0;
            0,0,0,0,0;
            0,0,0,0.35,0.35;
            0,0,0,-0.35,0.35]';
            [-0.9,0,0,0,0;
            0.5,0,0,0,0;
            0,0,0,0,0;
            -0.5,0,0,0,0;
            0,0,0,0,0]';
            [0,0,0,0,0;
            0,0,0,0,0;
            -0.4,0,0,0,0;
            0,0,0,0,0;
            0,0,0,0,0]'];
    AR_cellT{2,1}=[[0,0,0,0,0;
            0,0.45,0,0,0;
            0,0,0.35,0,0.35;
            0,0,0,0,0;
            0,0,-0.35,0,0.35]';
            [0,0.5,0,0,0;
            0,-0.9,0,0,0;
            0,-0.5,0,0,0;
            0,0,0,0,0;
            0,0,0,0,0]';
            [0,0,0,0,0;
            0,0,0,0,0;
            0,0,0,0,0;
            0,-0.4,0,0,0;
            0,0,0,0,0]'];
    AR_cellT{3,1}=[[0,0,0,0,0;
            0,0.35,0,0.35,0;
            0,0,0.45,0,0;
            0,-0.35,0,0.35,0;
            0,0,0,0,0]';
            [0,0,0.5,0,0;
            0,0,-0.5,0,0;
            0,0,-0.9,0,0;
            0,0,0,0,0;
            0,0,0,0,0]';
            [0,0,0,0,0;
            0,0,0,0,0;
            0,0,0,0,0;
            0,0,0,0,0;
            0,0,-0.4,0,0]'];
    AR_cellT{4,1}=[[0,0,0,0,0;
                    0,0.35,0,0,-0.35;
                    0,0,0,0,0;
                    0,0,0,0.45,0;
                    0,0.35,0,0,0.35]';
                    [0,0,0,0,0;
                    0,0,0,0,0;
                    0,0,0,0.5,0;
                    0,0,0,-0.9,0;
                    0,0,0,-0.5,0]';
                    [0,0,0,-0.4,0;
                    0,0,0,0,0;
                    0,0,0,0,0;
                    0,0,0,0,0;
                    0,0,0,0,0]'];
        AR_cellT{5,1}=[[0.35,0,0.35,0,0;
                    0,0,0,0,0;
                    -0.35,0,0.35,0,0;
                    0,0,0,0.45,0;
                    0,0,0,0,0.45]';
                    [0,0,0,0,-0.5;
                    0,0,0,0,0;
                    0,0,0,0,0;
                    0,0,0,0,0.5;
                    0,0,0,0,-0.9]';
                    [0,0,0,0,0;
                    0,0,0,0,-0.4;
                    0,0,0,0,0;
                    0,0,0,0,0;
                    0,0,0,0,0]'];
    data(1:3,:)=mvnrnd(zeros(1,5),diag(sigma2*ones(5,1)),3);
    for k=4:size(state_seqs,1)
        Zt=[];
        for i=1:3
            Zt=[Zt;data(k-i,:)'];
        end
        data(k,:)=(AR_cellT{state_seqs(k,1),1}'*Zt+mvnrnd(zeros(5,1),diag(sigma2*ones(5,1)),1)')';
    end
    data_struct.ART_for_cal=AR_cellT;
    data_struct.T=T;
    data_struct.D=D;
    data_struct.state_seqs=state_seqs;
    data_struct.state_gamma=state_gamma;
end

